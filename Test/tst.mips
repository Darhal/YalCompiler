.data
	div_by0: .asciiz "[RUNTIME ERROR]: Division by zero detected.\n"
	true_str: .asciiz "vrai\n"
	false_str: .asciiz "faux\n"
.text

main:
	# Begin stackframe:
	move $s7, $sp
	# Allocate for the declared variables:
	addi $sp, $sp, -4

	jal test

	# Assignement for the variable 'a':
	sw $v0, 0($sp)

	# Get value of the variable 'a':
	lw $v0, 0($sp)

	# Call write sys call:​
	move $a0, $v0
	li $v0, 1
	syscall
	# Return to line:
	li $v0, 11 	# Syscall code for printing one char
	li $a0, '\n' 	# print new line char
	syscall

	# Handle program exit
exit:
	li $v0, 10
	syscall

	 # Handle RUNTIME errors
div_by_zero:
	la $a0, div_by0
	li $v0, 4
	syscall
	j exit

	# Declaration of function: a
a:
	# Pushing in the function environments (Creating the stack frame)
	move $s2, $sp
	addi $sp, $sp, -4
	sw $ra, 0($sp)

	# Integer Constant '1':
	li $v0, 1

	# Call write sys call:​
	move $a0, $v0
	li $v0, 1
	syscall
	# Return to line:
	li $v0, 11 	# Syscall code for printing one char
	li $a0, '\n' 	# print new line char
	syscall

	# Integer Constant '5':
	li $v0, 5
	addi $sp, $sp, -4
	sw $v0, -4($sp)

	# Integer Constant '5':
	li $v0, 5
	lw $t8, -4($sp)
	addi $sp, $sp, 4
	# Equal:
	sub $v0, $t8, $v0
	nor $v0, $v0, $v0
	# Popping out the function environments (Popping the stack frame)
	lw $ra, 0($sp)
	move $sp, $s2
	jr $ra


	# Declaration of function: test
test:
	# Pushing in the function environments (Creating the stack frame)
	move $s2, $sp
	addi $sp, $sp, -4
	sw $ra, 0($sp)

	# Integer Constant '1':
	li $v0, 1

	# Call write sys call:​
	move $a0, $v0
	li $v0, 1
	syscall
	# Return to line:
	li $v0, 11 	# Syscall code for printing one char
	li $a0, '\n' 	# print new line char
	syscall

	jal a
	nor $v0, $v0, $v0

	 # Evalue if the expression is true or false
	beq $v0, $zero, wfalse_8454
wtrue_8454:
	la $a0, true_str
	li $v0, 4
	syscall
	j wend_8454
wfalse_8454:
	la $a0, false_str
	li $v0, 4
	syscall
wend_8454:
	# Integer Constant '8':
	li $v0, 8

	# Call write sys call:​
	move $a0, $v0
	li $v0, 1
	syscall
	# Return to line:
	li $v0, 11 	# Syscall code for printing one char
	li $a0, '\n' 	# print new line char
	syscall

	# Integer Constant '5':
	li $v0, 5
	# Popping out the function environments (Popping the stack frame)
	lw $ra, 0($sp)
	move $sp, $s2
	jr $ra


